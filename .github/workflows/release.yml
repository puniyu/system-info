name: release
on:
  push:
    branches:
      - main
    paths:
      - 'Cargo.toml'
      - 'src/*'
  pull_request_target:
    paths:
      - 'Cargo.toml'
      - 'src/*'
    branches-ignore:
      - 'release-please**'
  workflow_dispatch:


concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:
  release:
    if: github.actor != 'puniyu[bot]'
    runs-on: ubuntu-latest
    outputs:
      releases_created: ${{ steps.release-please.outputs.releases_created }}
    steps:
      - name: 获取token
        uses: actions/create-github-app-token@67018539274d69449ef7c02e8e71183d1719ab42 # v2
        id: app-token
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}

      - name: 运行 release-please-action
        id: release-please
        uses: googleapis/release-please-action@16a9c90856f42705d54a6fda1823352bdc62cf38 # v4
        with:
          token: ${{ steps.app-token.outputs.token }}
          config-file: .release-please-config.json
          manifest-file: .release-please-manifest.json

  test:
    runs-on: ubuntu-latest
    steps:
      - name: 检出代码
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          ref: ${{ github.event.pull_request.head.ref || github.ref_name }}
          repository: ${{ github.event.pull_request.head.repo.full_name || github.repository }}

      - name: 设置 Rust 工具链
        uses: dtolnay/rust-toolchain@stable

      - name: 设置 Rust 缓存
        uses: swatinem/rust-cache@98c8021b550208e191a6a3145459bfc9fb29c4c0 # v2
        with:
          prefix-key: 'puniyu_system_info'

      - name: 拉取依赖
        run: cargo fetch

      - name: 单元测试
        run: cargo test


  publish:
    runs-on: ubuntu-latest
    needs: [test, release]
    if: needs.release.outputs.releases_created == 'true'
    steps:
      - name: 检出代码
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          ref: ${{ github.event.pull_request.head.ref || github.ref_name }}
          repository: ${{ github.event.pull_request.head.repo.full_name || github.repository }}

      - name: 设置 Rust 工具链
        uses: dtolnay/rust-toolchain@stable

      - name: 设置 Rust 缓存
        uses: swatinem/rust-cache@98c8021b550208e191a6a3145459bfc9fb29c4c0 # v2
        with:
          prefix-key: 'puniyu_system_info'

      - name: 发布
        run: |
          cargo publish
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CRATES_API_TOKEN }}
